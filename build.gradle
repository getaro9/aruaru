buildscript {
    repositories {
        mavenCentral()
//        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:3.0.2")
        classpath("org.springframework:springloaded:1.2.8.RELEASE")
        // DomaでDBの設定情報を取得してコード生成するときに必要
        classpath("org.postgresql:postgresql:42.5.4")
    }
}


plugins {
  // specify the Doma CodeGen Plugin with correct version
  id 'org.domaframework.doma.codegen' version '2.0.0'
  id 'org.domaframework.doma.compile' version '2.0.0'
  id 'com.diffplug.eclipse.apt' version '3.40.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    archiveBaseName = 'aruaru-matome'
    archiveVersion =  '0.1.0'
}

repositories {
    mavenCentral()
//    jcenter()
}

sourceCompatibility = 17
targetCompatibility = 17



dependencies {
    // Web
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation('org.apache.tomcat.embed:tomcat-embed-jasper:10.1.5')

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.postgresql:postgresql:42.5.4'

    // Doma
    implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.7.0'
    annotationProcessor "org.seasar.doma:doma-processor:2.53.1"

    implementation("org.springframework.boot:spring-boot-starter-log4j2")

    implementation("org.apache.commons:commons-lang3:3.3.2")

    // Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('com.jayway.jsonpath:json-path')
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}


bootRun {
    jvmArgs = ['-Dspring.profiles.active=develop']
}

test {
    jvmArgs = ['-Dspring.profiles.active=develop']
}

domaCodeGen {
  // make an arbitrary named block
  dev {
    // JDBC url
    url = 'jdbc:postgresql://localhost:5433/aruaru'
    // JDBC user
    user = 'aruaru'
    // JDBC password
    password = 'aruaru'
    // 自動生成対象のテーブル名を正規表現で絞る
    tableNamePattern = '.*user.*'
    // configuration for generated entity source files
    entity {
      packageName = 'aruaru.user.entity'
      useAccessor = true
      useListener = false
      useMetamodel = false
      useMappedSuperclass = false
      var mappingFile = layout.projectDirectory.file("$projectDir/codegen-name-mapping.properties")
      entityPropertyClassNamesFile.set(mappingFile)
    }
    // configuration for generated DAO source files
    dao {
      packageName = 'aruaru.user.dao'
    }
  }
}
